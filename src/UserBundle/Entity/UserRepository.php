<?php

namespace UserBundle\Entity;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
	public function findPracts($paginator,$domain = null,$page = 1)
	{
		$qb = $this->createQueryBuilder('ac');
		$query = $this->createQueryBuilder('a')
		              ->select('a')
		              ->where('a.enabled = 1')
					  ->andWhere('a.practValid = 1');

			if($domain != null)
			{
				$query->leftJoin('a.practinfos', 'c');
				$query->leftJoin('c.practdomains', 'd')
				->andWhere($qb->expr()->in('d', ':d'))
				->setParameter('d', $domain);
			}

		return $paginator->paginate(
			$query, $page,10
		);
	}

	public function findPracticiensByDomain($domain)
	{
		$qb = $this->createQueryBuilder('ac');
		$query = $this->createQueryBuilder('a')
		              ->select('a')
		              ->where('a.enabled = 1')
					  ->andWhere('a.practValid = 1');

		$query->leftJoin('a.practinfos', 'c');
		$query->leftJoin('c.practDomains', 'd')
			  ->andWhere($qb->expr()->in('d', ':d'))
			  ->setParameter('d', $domain);

		return $query->getQuery()->execute();
	}

	public function findByRole($role)
	{
	    $qb = $this->_em->createQueryBuilder();
	    $qb->select('u')
	        ->from($this->_entityName, 'u')
	        ->where('u.roles LIKE :roles')
	        ->setParameter('roles', '%"'.$role.'"%');

	    return $qb->getQuery()->getResult();
	}

	public function getInvalidPracts()
	{
		$qb = $this->createQueryBuilder('a')
			->where('a.practValid = 0');
			$qb->andWhere($qb->expr()->isNotNull('a.practinfos'));

		return $qb->getQuery()->getResult();
	}
}
